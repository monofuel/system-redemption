image: docker:git

variables:
   DOCKER_HOST: tcp://docker:2375/
   DOCKER_DRIVER: overlay2
   GIT_SUBMODULE_STRATEGY: recursive
   CONTAINER_REGISTRY: registry.japura.net/$CI_PROJECT_PATH


services:
  - docker:dind

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - rts-assets/
    - ShaderParticleEngine
#  - node_modules/

# TODO need a new image that includes docker-compose on default
before_script:
  - docker info
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.japura.net
  - ls rts-assets/

  # TODO pull docker image for caching and use cache-from

stages:
  - build
  - test
  - deploy

standalone_build:
  tags:
    - docker
  stage: build
  script:
    - docker pull ${CONTAINER_REGISTRY}/sr_main:latest || true
    - docker pull ${CONTAINER_REGISTRY}/sr_main:builder || true
    - docker build --target builder --cache-from ${CONTAINER_REGISTRY}/sr_main:builder -t ${CONTAINER_REGISTRY}/sr_main:builder .
    - docker build --cache-from ${CONTAINER_REGISTRY}/sr_main:builder --cache-from ${CONTAINER_REGISTRY}/sr_main:latest -t ${CONTAINER_REGISTRY}/sr_main:latest .
    - docker tag ${CONTAINER_REGISTRY}/sr_main:latest ${CONTAINER_REGISTRY}/sr_main:$CI_COMMIT_SHA
    - docker push ${CONTAINER_REGISTRY}/sr_main:$CI_COMMIT_SHA
    - docker push ${CONTAINER_REGISTRY}/sr_main:latest
    - docker push ${CONTAINER_REGISTRY}/sr_main:builder

standalone_test:
  tags:
    - docker
  stage: test
  script:
    - docker pull ${CONTAINER_REGISTRY}/sr_main:latest || true
    # TODO tests need dev dependencies, hmmm
    - docker run -t ${CONTAINER_REGISTRY}/sr_main:latest sh -c 'yarn test'

prod_deploy:
  tags:
    - docker
  image: williamyeh/ansible:alpine3
  # override default before_script
  before_script:
    - ls
  stage: deploy
  only:
    - master
  script:
    - mkdir ~/.ssh
    - echo "$ANSIBLE_ID_RSA" ~/.ssh/id_rsa
    - ANSIBLE_CONFIG=./ansible.cfg ansible-playbook playbooks/update-sr.yml
