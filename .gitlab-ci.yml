image: docker:git

variables:
   DOCKER_HOST: tcp://localhost:2375/
   DOCKER_DRIVER: overlay2
   GIT_SUBMODULE_STRATEGY: recursive
   CONTAINER_REGISTRY: registry.soggysquad.space/$CI_PROJECT_PATH
   KUBECONFIG: /etc/deploy/config

services:
  - docker:dind

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - rts-assets/
    - ShaderParticleEngine
#  - node_modules/

# TODO need a new image that includes docker-compose on default
before_script:
  - docker info
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.soggysquad.space
  - ls rts-assets/
  - apk add py-pip --no-cache
  - pip install docker-compose

  # TODO pull docker image for caching and use cache-from

stages:
  - build
  - test
  - deploy

standalone_build:
  stage: build
  script:
    - docker pull ${CONTAINER_REGISTRY}/sr_main:latest || true
    - docker pull ${CONTAINER_REGISTRY}/sr_main:builder || true
    - docker build --target builder --cache-from ${CONTAINER_REGISTRY}/sr_main:builder -t ${CONTAINER_REGISTRY}/sr_main:builder .
    - docker-compose build
    - docker tag ${CONTAINER_REGISTRY}/sr_main:latest ${CONTAINER_REGISTRY}/sr_main:$CI_COMMIT_SHA
    - docker push ${CONTAINER_REGISTRY}/sr_main:$CI_COMMIT_SHA
    - docker push ${CONTAINER_REGISTRY}/sr_main:latest
    - docker push ${CONTAINER_REGISTRY}/sr_main:builder

standalone_test:
  stage: test
  script:
    - docker pull ${CONTAINER_REGISTRY}/sr_main:latest || true
    - docker-compose run standalone 'yarn add mocha && yarn test'

prod_deploy:
  image: alpine/helm
  stage: deploy
  only:
    - master
  script:
    - mkdir -p /etc/deploy
    - echo ${kube_config} | base64 -d > ${KUBECONFIG}
    - kubectl config use-context soggy-k8s
    - helm init --client-only
