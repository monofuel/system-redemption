image: docker:git

variables:
   DOCKER_HOST: tcp://localhost:2375/
   DOCKER_DRIVER: overlay2
   GIT_SUBMODULE_STRATEGY: recursive
   CONTAINER_REGISTRY: registry.gitlab.com/$CI_PROJECT_PATH

services:
  - docker:dind

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - rts-assets/
    - ShaderParticleEngine
#  - node_modules/

before_script:
  - docker info
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  - ls rts-assets/
  - apk add py-pip --no-cache
  - pip install docker-compose

  # TODO pull docker image for caching and use cache-from

stages:
  - build
  - test
  # - deploy

standalone_build:
  stage: build
  script:
    - docker-compose build
    - docker tag ${CONTAINER_REGISTRY}/sr_main:latest ${CONTAINER_REGISTRY}/sr_main:$CI_COMMIT_SHA
    - docker push ${CONTAINER_REGISTRY}/sr_main:latest

standalone_test:
  stage: test
  script:
    - docker-compose run standalone yarn test

# prod_deploy:
#   stage: deploy
#   script:
#     - docker build -t deployer -f ./Dockerfile-deploy .
#     - docker run -e VAGRANT_LINODE_KEY -e ANSIBLE_ID_RSA -e ANSIBLE_ID_RSA_PUB deployer bash -c 'mkdir -p /vagrant/.vagrant/machines/sr/linode; echo "12037264" > /vagrant/.vagrant/machines/sr/linode/id; echo "$ANSIBLE_ID_RSA" > /vagrant/id_rsa; echo "$ANSIBLE_ID_RSA_PUB" > /vagrant/id_rsa.pub; cd /vagrant && vagrant up --provider=linode && vagrant provision'
